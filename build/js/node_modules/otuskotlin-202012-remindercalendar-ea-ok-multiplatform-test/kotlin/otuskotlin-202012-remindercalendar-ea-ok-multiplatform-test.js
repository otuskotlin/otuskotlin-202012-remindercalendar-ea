(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'kotlin', 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform', 'kotlin-test'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('kotlin'), require('otuskotlin-202012-remindercalendar-ea-ok-multiplatform'), require('kotlin-test'));
  else {
    if (typeof kotlin === 'undefined') {
      throw new Error("Error loading module 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'.");
    }if (typeof this['otuskotlin-202012-remindercalendar-ea-ok-multiplatform'] === 'undefined') {
      throw new Error("Error loading module 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'. Its dependency 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform' was not found. Please, check whether 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform' is loaded prior to 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'.");
    }if (typeof this['kotlin-test'] === 'undefined') {
      throw new Error("Error loading module 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'. Its dependency 'kotlin-test' was not found. Please, check whether 'kotlin-test' is loaded prior to 'otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'.");
    }root['otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'] = factory(typeof this['otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'] === 'undefined' ? {} : this['otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test'], kotlin, this['otuskotlin-202012-remindercalendar-ea-ok-multiplatform'], this['kotlin-test']);
  }
}(this, function (_, Kotlin, $module$otuskotlin_202012_remindercalendar_ea_ok_multiplatform, $module$kotlin_test) {
  'use strict';
  var SharedModel = $module$otuskotlin_202012_remindercalendar_ea_ok_multiplatform.ok.multiplatform.SharedModel;
  var assertEquals = $module$kotlin_test.kotlin.test.assertEquals_3m0tl5$;
  var Kind_CLASS = Kotlin.Kind.CLASS;
  var test = $module$kotlin_test.kotlin.test.test;
  var suite = $module$kotlin_test.kotlin.test.suite;
  var someFun = $module$otuskotlin_202012_remindercalendar_ea_ok_multiplatform.ok.multiplatform.someFun_61zpoe$;
  var contains = Kotlin.kotlin.text.contains_li3zpu$;
  var assertTrue = $module$kotlin_test.kotlin.test.assertTrue_i7pyzi$;
  function SharedModelTest() {
  }
  SharedModelTest.prototype.sharedModelTest = function () {
    var sm = new SharedModel('id-1', 'name-1');
    assertEquals('id-1', sm.id);
    assertEquals('name-1', sm.name);
  };
  SharedModelTest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SharedModelTest',
    interfaces: []
  };
  function SomeFunTest() {
  }
  function SomeFunTest$someFunTest$lambda() {
    var str = 'SomeFun';
    return contains(someFun(str), str);
  }
  SomeFunTest.prototype.someFunTest = function () {
    assertTrue(void 0, SomeFunTest$someFunTest$lambda);
  };
  SomeFunTest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SomeFunTest',
    interfaces: []
  };
  _.SharedModelTest = SharedModelTest;
  var package$ok = _.ok || (_.ok = {});
  var package$multiplatform = package$ok.multiplatform || (package$ok.multiplatform = {});
  package$multiplatform.SomeFunTest = SomeFunTest;
  suite('', false, function () {
    suite('SharedModelTest', false, function () {
      test('sharedModelTest', false, function () {
        return (new SharedModelTest()).sharedModelTest();
      });
    });
  });
  suite('ok.multiplatform', false, function () {
    suite('SomeFunTest', false, function () {
      test('someFunTest', false, function () {
        return (new SomeFunTest()).someFunTest();
      });
    });
  });
  Kotlin.defineModule('otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test', _);
  return _;
}));

//# sourceMappingURL=otuskotlin-202012-remindercalendar-ea-ok-multiplatform-test.js.map
